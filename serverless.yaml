org: jonathonklem1
service: atfgundbmiddleware # Name of our service

provider:
  name: aws
  runtime: go1.x
  stage: dev
  region: us-east-1
  memorySize: 128 # 1MB increments, minimum 128, affects pricing
  environment:
    ALLOWED_ORIGIN: ${ssm:/ATFGUNDBMiddleware/config/allowed_origin}
    MONGO_URL: ${ssm:/ATFGUNDBMiddleware/config/mongodb_url}

package:
  exclude:
    - ./**
  include:
    - ./bin/aws
    - ./bin/.env

# Frontend deploy config
custom:
  stage: ${opt:stage, self:provider.stage}
  client:
    bucketName: dashboard.atfgundb.com # Must be globally unique, if you're setting a custom domain, then use that. (ex: example.com)
    distributionFolder: frontend/build # If you named your frontend project something else, change this here.
    existing: true


# Endpoint config
functions:
  GetGuns:
    handler: bin/aws
    events:
      - http:
          path: /guns
          method: get
          cors: true # This allows OPTION requests to pass trough the AWS API Gateway
  AddGun:
    handler: bin/aws
    events:
      - http:
          path: /guns/add
          method: post
          cors: true # This allows OPTION requests to pass trough the AWS API Gateway
  AddMaintenanceToGun:
    handler: bin/aws
    events:
      - http:
          path: /guns/addMaintenance
          method: post
          cors: true # This allows OPTION requests to pass trough the AWS API Gateway
  AddAccessoryToGun:
    handler: bin/aws
    events:
      - http:
          path: /guns/addAccessory
          method: post
          cors: true # This allows OPTION requests to pass trough the AWS API Gateway
  ListAmmo:
    handler: bin/aws
    events:
      - http:
          path: /ammo
          method: get
          cors: true # This allows OPTION requests to pass trough the AWS API Gateway
  AddAmmo:
    handler: bin/aws
    events:
      - http:
          path: /ammo/add
          method: post
          cors: true # This allows OPTION requests to pass trough the AWS API Gateway
  DisposeAmmo: 
    handler: bin/aws
    events:
      - http:
          path: /ammo/dispose
          method: get
          cors: true # This allows OPTION requests to pass trough the AWS API Gateway
  PurchaseAmmo:
    handler: bin/aws
    events:
      - http:
          path: /ammo/purchase
          method: post
          cors: true # This allows OPTION requests to pass trough the AWS API Gateway
  UserSaveVisit:
    handler: bin/aws
    events:
      - http:
          path: /users/saveVisit
          method: post
          cors: true # This allows OPTION requests to pass trough the AWS API Gateway
  AddRangeTrip:
    handler: bin/aws
    events:
      - http:
          path: /range/addTrip
          method: post
          cors: true # This allows OPTION requests to pass trough the AWS API Gateway
  GetDateAndAmmoReport:
    handler: bin/aws
    events:
      - http:
          path: /range/getDateAndAmmoReport
          method: get
          cors: true # This allows OPTION requests to pass trough the AWS API Gateway
  RemoveGun:
    handler: bin/aws
    events:
      - http:
          path: /guns/remove
          method: get
          cors: true # This allows OPTION requests to pass trough the AWS API Gateway
  RemoveAmmo:
    handler: bin/aws
    events:
      - http:
          path: /ammo/remove
          method: get
          cors: true # This allows OPTION requests to pass trough the AWS API Gateway
  GetRangeTrips:
    handler: bin/aws
    events:
      - http:
          path: /range/getRangeTrips
          method: get
          cors: true # This allows OPTION requests to pass trough the AWS API Gateway
# Frontend deploy plugin config
plugins:
  - serverless-finch
# this doesn't appear to be neccesary after the resource was created, leaving here for posterity
#resources:
#  - ${file(resources/s3-bucket.yml)}